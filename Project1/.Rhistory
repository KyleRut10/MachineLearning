else if (k2[1] < x[i] && x[i] < k2[2]) {
k2count <- k2count + 1
k3count <- k3count + 1
}
else if (k2[1] < x[i] && x[i] < k2[2]) {
k3count <- k3count + 1
}
}
#Probabilities
k1count/length(x)
k2count/length(x)
k3count/length(x)
```
sort(x)
#### e ~ Calculate the range of the set of values. Calculate an approximate value for $s$ from using the calculated range and the empirical rule. Compare this to the $s$ you calculated in b.
range = max(x) - min(x)
range = max(x) - min(x)
sd <- range/4
range = max(x) - min(x)
sd <- range/3
range = max(x) - min(x)
sd <- range/6
ybar <- mean(x1)
ybar
s <- sd(x1)
s
knitr::opts_chunk$set(echo = TRUE)
options(show.signif.stars = FALSE)
suppressMessages(library(readr))
suppressMessages(library(effects))
soybeans <- read_csv("soybeans.csv")
str(soybeans)
soybeans$HerbF <- factor(soybeans$Herb)
lm_herb1 <- lm(Yield ~ HerbF + Silt + Clay + om, data = soybeans)
lm_herb2 <- lm(Yield ~ Herb + Silt + Clay + om, data = soybeans)
plot(allEffects(lm_herb1), grid=T)
plot(allEffects(lm_herb2), grid=T)
summary(lm_herb1)
summary(lm_herb2)
Kyle's Work
HerbF = 1
$\hat\mu\{Yield|Herb, Silt, Clay, om} =$ ```r 33.90268 +0.30481*5 -0.26004*10 -2.53214*1.5```
33.90268 +0.30481*5 -0.26004*10 -2.53214*1.5
mean(soybeans)
mean(soybeans$Yield)
33.90268 -7.94633 +0.30481*5 -0.26004*10 -2.53214*1.5
(99+102+153+132+192+174)/6
(99+102+153+132+192+174)
/6
852/6
y <- c(99,102,153,132,192,174)
mean(y)
var(y)
mean(99,102,153)
mean(c(99,102,153))
var(c(99,102,153))
s2 <- c(99,153,192)
mean(s2)
var(s2)
148*.2
2181*.2
s3 <- c(99, 132, 174)
mean(s3)
mean(s3)*0.1
var(s3)
var(s3)*0.1
s4 <- c(102,153,132)
mean(s4)
mean(s4)*0.2
var(s4)
var(s4)*0.2
s5 <- c(102,192,174)
mean(s5)
mean(s5)*(1/8)
var(s5)
var(s5)*(1/8)
s6 <- c(99,132,192)
mean(s2)
mean(s2)*(2/8)
var(s2)
var(s2)*2/8
mean(s6)
mean(s6)/8
mean(s6)
mean(s6)/4
var(s6)
var(s6)/4
s7 <- c(102,153,174)
mean(s7)
mean(s7)/8
var(s7)
var(s7)/8
11.8 + 29.6 + 13.5 + 25.8 + 19.5 + 32.25 + 17.875
92.1 + 436.2 + 141.3 + 131.4 + 283.5 + 555.75 + 161.375
161.375 - 142
1801.625 - 1438.8
4/10 + (2/8)
3/10 + (1/4)
4/10 + (1/8)
3/10 + (2/8)
0.2 + (3/8)
0.1 + (1/4)
knitr::opts_chunk$set(echo = TRUE)
combinations(20,4)
combn(20,4)
length(combn(20,4))
dim(combn(20,4))
dim(combn(20,4))[2]
dim(combn(20,4))[2]
dim(combn(4,2))[2]
dim(combn(16,2))[2]
20!
20*19*18*17*16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
options(scipen = 999)
20*19*18*17*16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
options(scipen = 999)
20*19*18*17*16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
options(scipen = 0)
#i is the place of the first aspen
total = 0
for (i in 20:4) {
hold = 1
for (j in i:20) {
hold = hold * j
}
hold = hold*3*2*1
for (k in i-4:1)
hold = hold * k
}
total = total + hold
}
#i is the place of the first aspen
total = 0
for (i in 20:4) {
hold = 1
for (j in i:20) {
hold = hold * j
}
hold = hold*3*2*1
for (k in i-4:1) {
hold = hold * k
}
total = total + hold
}
total
total / 2432902008176640000
17 * 4*3*2*1 * 16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
8.536498e+15 / 2432902008176640000
options(scipen = 999)
denom = 20*19*18*17*16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
denom
options(scipen = 0)
num =17 * 4*3*2*1 * 16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
num/denom
num =17 * 4*3*2*1 * 16*15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
num/denom * 100
dim(combn(8,5))[2]
dim(combn(8,3))[2]
sample(c(0,1),8,replace=TRUE)
women <- {}
women[1] <- sample(c(0,1),5,replace=TRUE)
women <- c()
women[1] <- sample(c(0,1),5,replace=TRUE)
women[1] <- c(sample(c(0,1),5,replace=TRUE))
women <- {}
women[1] <- sum(sample(c(0,1),5,replace=TRUE))
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
hist(men)
hist(women)
hist(men)
hist(women)
men <- factor(men)
hist(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
hist(men)
hist(women)
hist(men)
summary(men)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-facotr(women)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
summary(women)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
set.seed(112358)
women <- {}
men <- c()
for (i in 1:1000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
set.seed(112358)
women <- {}
men <- c()
for (i in 1:10000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
set.seed(112358)
women <- {}
men <- c()
for (i in 1:100000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
set.seed(112358)
women <- {}
men <- c()
for (i in 1:100000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
hist(women)
hist(men)
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
set.seed(112358)
women <- {}
men <- c()
for (i in 1:1000000) {
women[i] <- sum(sample(c(0,1),5,replace=TRUE))
men[i] <- sum(sample(c(0,1),3,replace=TRUE))
}
hist(women)
hist(men)
women<-factor(women)
summary(women)
men<-factor(men)
summary(men)
dim(combn(8,5))[2]
1/dim(combn(8,5))[2] * 100
tinytex::install_tinytex()
tinytex:::is_tinytex()
data(co2)
force(co2)
decompose(co2)
plot(decompose(co2))
plot(decompose(co2), type = multiplicative)
#a.
plot(decompose(co2))
plot(decompose(co2, type = multiplicative))
plot(decompose(co2, type = "multiplicative"))
#a.
plot(decompose(co2))
plot(decompose(co2, type = "multiplicative"))
#a.
plot(decompose(co2))
plot(decompose(co2, type = "multiplicative"))
#a.
plot(decompose(co2))
plot(decompose(co2, type = "multiplicative"))
#2.
ts(c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16))
chardonnay <- ts(c(47,-26,42,-10,27,-8,16,6,-1,25,11,1,25,7,-5,3))
#2.
shiraz <- ts(c(39,35,16,18,7,22,13,18,20,9,-12,-11,-19,-9,-2,16))
plot(shiraz)
plot(chardonnay)
#b.
plot(lag(shiraz,1))
plot(lag(chardonnay,1))
#a.
plot(shiraz)
#b.
plot(lag(shiraz,1))
#a.
plot(shiraz)
plot(chardonnay)
plot(lag(chardonnay,1))
lag(shiraz,1)
#b.
lag.plot(shiraz)
lag.plot(chardonnay)
#a.
plot(decompose(co2))
#a.
plot(shiraz)
plot(chardonnay)
#b.
lag.plot(shiraz)
source('C:/Users/Kyle/CourseWork/Fall2020/TimeSeries/Homework1/HW1.R', echo=TRUE)
lag.plot(chardonnay)
#b.
lag.plot(shiraz)
plot(decompose(shiraz))
plot(decompose(shiraz))
plot(decompose(chardonnay))
#a.
plot(shiraz)
plot(chardonnay)
lag.plot(chardonnay)
#a.
plot(shiraz)
#b.
lag.plot(shiraz)
lag.plot(chardonnay)
#c.
acf(shiraz)
acf(chardonnay)
#c.
acf(shiraz)
acf(chardonnay)
#c.
acf(shiraz)
#3.
w <- rexp(1000) -1
#3.
w <- ts(rexp(1000) -1)
plot(w)
#3.
w <- rexp(1000) -1
plot(w)
#3.
w <- rexp(1000) -1
hist(w)
acf(w)
hist(w)
acf(w)
reticulate::repl_python()
import pandas as
Y
import pandas as pd
import pandas as pd
import pandas as pd
import pandas
virtualenv python
>>
import numpy as np
import pandas as pd
conda create -n project1 python
install pandas
import pandas as pd
import pandas as pd
py_install("pandas")
library(reticulate)
quit
"Hello World"
py_install(pandas)
library(reticulate)
library(reticulate)
py_install("pandas")
reticulate::repl_python()
import pandas as pd
import pandas as pd
import numpy as np
import numpy as np
import pandas as pd
breast.cancer = open("../Data/breast-cancer-wisconsin.data")
breast.cancer = open(".../Data/breast-cancer-wisconsin.data")
breast.cancer = open("breast-cancer-wisconsin.data")
breast.cancer = open("breast-cancer-wisconsin.data", "r")
os.getcwd()
import os
os.getcwd()
os.chdir('C:\\Users\\Kyle\\MachineLearning\\Project 1')
os.getcwd()
breast.cancer = open("..\\Data\\breast-cancer-wisconsin.data", "r")
breast.cancer = open("\\Data\\breast-cancer-wisconsin.data", "r")
breast.cancer = open('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data', "r")
breast = open('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data', "r")
breast
BreastCancerData = f.read(breast)
BreastCancerData = f.read()
import numpy as np
import pandas as pd
import os
f = open('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data', "r")
BreastCancerData = f.read()
print(BreastCancerData)
FirstAlgorithm('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data')
FirstAlgorithm('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data')
import numpy as np
import pandas as pd
def FirstAlgorithm(file_loc):
f = open(file_loc, "r")
data = f.read()
print(data)
FirstAlgorithm('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data')
FirstAlgorithm('C:\\Users\\Kyle\\MachineLearning\\Project 1\\Data\\breast-cancer-wisconsin.data')
quit
breast.cancer.wisconsin <- read.csv("C:/Users/Kyle/MachineLearning/Project 1/Data/breast-cancer-wisconsin.data", header=FALSE)
View(breast.cancer.wisconsin)
detach("package:reticulate", unload = TRUE)
library(reticulate)
